OWASP top 10
Injection (e.g. SQL)

Broken Authentication
session hijacking | changing other user's password | can access other userâ€™s data 

Sensitive Data Exposure
What files are loaded into the browser? whats sent with responses to requests?

XXE
If an XML document is able to be uploaded and viewed

Broken Access Control
a user can perform actions that only higher privileged users should be able to

Security misconfig
insecure default configs or incomplete config | misconfigured HTTP headers | verbose error messages | outdated technology

XSS
when an app includes untrusted data from another web page without validating or escaping
when a app updates an existing web page with user-supplied data using a browser API that can create HTML or JS

Insecure deserialization
e.g. python pickle 

COmponents with known vulns
using out of date libraries etc

Insufficient Logging and Monitoring

-------



Start from the perspective of an unregistered user

1. enumerate web server

directory brute force - data exposure | security misconfig | components with known vulns
nikto - security misconfig | components with known vulns | data exposure
browser tools - files loaded into browser | network traffic | console log errors produced
burpsuite - useful to capture requests as they can be referred back to later

2. enumerate input points on server- what happens when supplied with special characters?
possibility of SQL injection or XSS

SQLMap(?) - injection
could also make own tool...

Now begin checking access control and authentication

1. can existing users- and with it, wrong passwords- be enumerated?
2. can authenticaton be bypassed via injection?
3. Any default or weak credentials in use? (common username and password wordlists)

Try to create a user

1. while doing this, assess the in-place password policy. Is it strong enough?
2. After successful authentication, is the session token able to be tampered with to allow for session hijacking?

Repeat enumeration from the perspective of a regular user
